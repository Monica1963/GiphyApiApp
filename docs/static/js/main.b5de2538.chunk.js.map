{"version":3,"sources":["constants/index.js","Components/Loading.js","Components/Paginate.js","Components/Giphys/Gif.js","Components/Giphys/Giphys.js","customHooks/useFetch.js","Components/Search.js","App.js","index.js"],"names":["enviroment","Loading","color","css","display","margin","size","Paginate","count","offset","handlePages","Row","Col","Pagination","className","Prev","onClick","prev","Button","variant","reset","Next","next","Gif","title","images","import_datetime","md","Card","Img","src","original","url","Body","Title","Text","moment","format","type","block","Giphys","search","useState","setUrl","useEffect","searchUrl","endpoint","initialState","rep","setData","fetching","setFetching","error","setError","fetchData","a","fetch","result","json","console","log","useFetch","info","data","pages","pagination","newUrl","map","gif","id","Search","handlerSearch","gifs","setGifs","Form","onSubmit","e","preventDefault","Group","Control","placeholder","onChange","target","value","App","setSearch","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5de2538.chunk.js","sourcesContent":["export const enviroment = {\r\n    BASE_URL: \"https://api.giphy.com/v1/gifs\",\r\n    OFFSET: \"&offset=\",\r\n    ENDPOINT:  \"trending?api_key=JCOhTYaCDipwzpMWJhtEGLha6PE8OGER&lang=es&rating=g&limit=6\",\r\n    ENDPOINTSEARCH: \"search?api_key=JCOhTYaCDipwzpMWJhtEGLha6PE8OGER&lang=es&rating=g&limit=6\",\r\n    MAX: 3000,\r\n    LIMIT: 3,\r\n}","import ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Loading = () => {\r\n    return ( \r\n        <ClipLoader\r\n         color={\"orange\"} \r\n         css={{display: \"block\", margin:\"0 auto\"}} \r\n         size={100} />\r\n     );\r\n}\r\n \r\nexport default Loading;","\r\nimport { Row, Col, Button, Pagination } from 'react-bootstrap';\r\nimport { enviroment} from './../constants';\r\n\r\nconst Paginate = ({count, offset, handlePages}) => {\r\n\r\n     \r\n\r\n    const handlerNext = () =>{\r\n       // console.log(\"voy a ir adelante\");\r\n           \r\n        const next = `${enviroment.OFFSET}${offset + count }`;\r\n        // console.log(`nextS  vale ${offset + count}`);\r\n        handlePages(next);\r\n       \r\n\r\n    };\r\n\r\n    const handlerPrev = () => {\r\n       // console.log(\"voy a ir para atras\");\r\n       \r\n       \r\n        const prev = `${enviroment.OFFSET}${offset - count}`;\r\n  \r\n   \r\n        handlePages(prev);\r\n       //  console.log(prev);\r\n    };\r\n\r\n    const handlerReset = () => {\r\n        const reset = `${enviroment.OFFSET}0`;\r\n        handlePages(reset);\r\n       // console.log(reset);\r\n    };\r\n       \r\n    return (\r\n       \r\n        <Row > \r\n             <Col>\r\n\r\n                <Pagination className=\"justify-content-center\">\r\n                \r\n                    {offset > 0 && <Pagination.Prev onClick={handlerPrev} />}\r\n                    <Button variant=\"success\" onClick={handlerReset} >Reset</Button>\r\n                    {offset < enviroment.MAX && <Pagination.Next onClick={handlerNext}/>}\r\n                \r\n                \r\n                </Pagination>\r\n        \r\n             </Col>\r\n                \r\n        \r\n        \r\n        </Row>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Paginate; ","import moment from 'moment';\r\nimport { Col, Card, Button} from 'react-bootstrap';\r\n\r\n//Componente de presentaci贸n\r\nconst Gif = ({ title, images, import_datetime }) => {\r\n    return ( \r\n        <Col md={4} className=\"mt-3 mb-3 text-center\">\r\n            <Card className=\"h-100\">\r\n                {/* <Card.Img className=\"foto img-responsive\" variant={\"top\"} src={images.preview_gif.url} />  */}\r\n                <Card.Img className=\"foto img-responsive\" variant={\"top\"} src={images.original.url} /> \r\n               \r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        {title} \r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                       <small> Fecha de creaci贸n: {moment(import_datetime).format(\"DD/MM/YYYY\")}</small>\r\n                    </Card.Text>\r\n                    <Button type=\"button\" variant=\"primary\" block>\r\n                        ....\r\n                    </Button>\r\n                </Card.Body>\r\n             </Card>\r\n        </Col>\r\n\r\n\r\n     );\r\n}\r\n \r\nexport default Gif;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport { useFetch } from \"./../../customHooks/useFetch\";\r\nimport Loading from './../Loading';\r\nimport Paginate from './../Paginate';\r\nimport Gif from './Gif';\r\nimport {enviroment} from './../../constants'\r\n\r\n\r\n//Componente de l贸gica\r\nconst Giphys = ({search}) => {\r\n  \r\n  const  [url, setUrl] = useState(enviroment.ENDPOINT);\r\n\r\n  useEffect ( () => {\r\n    // console.log(\"Busca:\" , search);\r\n    const searchUrl = !search ? enviroment.ENDPOINT : `${enviroment.ENDPOINTSEARCH}&q=${search}`; //SI HAY BUSQUEDA CAMBIA EL ENDPOINT \r\n    // console.log(searchUrl);\r\n    setUrl(searchUrl);\r\n  }, [search]);\r\n\r\n  const [info, fetching] = useFetch(url);\r\n  const {data, pagination: pages} = info;\r\n  \r\n  const handlePages= (newUrl) => {\r\n    if(!search){\r\n      setUrl(`${enviroment.ENDPOINT}${newUrl}`);\r\n    }else{\r\n      setUrl(`${enviroment.ENDPOINTSEARCH}&q=${search}${newUrl}`);\r\n    };\r\n    \r\n    // console.log(url);\r\n    \r\n    \r\n  }\r\n    \r\n    return (\r\n      <> \r\n      <Paginate {...pages} handlePages ={handlePages} />\r\n        <Row>\r\n          {\r\n            fetching ?\r\n             (\r\n              <Loading />\r\n             )\r\n            : (\r\n              data.map((gif) => (\r\n             <Gif key={gif.id} {...gif} />\r\n           )) \r\n          )\r\n        }\r\n        </Row>\r\n          \r\n        </>\r\n        \r\n     );\r\n}\r\n \r\nexport default Giphys;","\r\nimport  { useEffect, useState } from 'react';\r\nimport {enviroment} from './../constants'\r\n\r\n\r\nexport const useFetch = (endpoint, initialState = []) => {\r\n\r\n\r\n    const [rep, setData] = useState(initialState);\r\n    const [fetching, setFetching] = useState(true);  //cargando//\r\n    const [error, setError] = useState(false);\r\n\r\n    const fetchData = async () => {\r\n        try{\r\n          setFetching(true);\r\n          const result = await fetch (`${enviroment.BASE_URL}/${endpoint}`); \r\n          const  rep = await result.json(); //  body \r\n          setData(rep); //array de gifs\r\n          //console.log(`hago fetch ${enviroment.BASE_URL}/${endpoint}`);\r\n          //false cuando termina la petici贸n\r\n          setFetching(false);\r\n  \r\n\r\n        } catch (e) {\r\n            \r\n          setError(true);\r\n          setFetching(false);\r\n          setData(initialState);\r\n          console.log(error);\r\n        }\r\n        \r\n    \r\n      };\r\n      \r\n      useEffect(() => {\r\n        fetchData();\r\n       \r\n        // eslint-disable-next-line\r\n      }, [endpoint]);\r\n \r\n    return [rep, fetching, error];\r\n\r\n};","import {useState} from 'react';\r\nimport {Row, Col, Button, Form} from 'react-bootstrap';\r\n \r\nconst Search = ({handlerSearch}) => {\r\n\r\n    const [gifs, setGifs] = useState(\"\");\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(\"dispare el enter\");\r\n        //if(gifs.trim() === \"\") return;\r\n        handlerSearch(gifs);\r\n    };\r\n\r\n    const handlerInput = (e) => {\r\n        setGifs(e.target.value);\r\n        \r\n    };\r\n\r\n    return ( \r\n        <Row className=\"justify-content-center\">\r\n            <Col md={6}>\r\n                <Form onSubmit={handlerSubmit}>\r\n                    <Form.Group>\r\n\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Ingrese texto a buscar\"\r\n                            onChange={handlerInput}\r\n\r\n                        />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Buscar</Button>\r\n               \r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n\r\n     );\r\n}\r\n \r\nexport default Search;","// import React, {useState, useEffect} from 'react';\nimport { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Giphys from './Components/Giphys';\nimport Search from './Components/Search';\nimport './App.css';\n\nfunction App() {\n  \n  const [search, setSearch] = useState(\"\");\n\n  const handlerSearch = (value) => {\n    setSearch(value);\n  }\n  \n  return (\n       \n    <Container>\n        <h1>Giphy App</h1>\n        <Search handlerSearch={handlerSearch}/>\n       \n          \n        <Giphys search={search} />\n         \n        \n       \n       \n    </Container>\n\n  \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}